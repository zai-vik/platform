{"ast":null,"code":"export default {\n  name: 'form-input-pass',\n  data() {\n    return {\n      path: require(\"@/img/InputPass/eye_locked.png\"),\n      type: \"password\",\n      input_value: '',\n      error: false,\n      error_message: '',\n      min_pass_length: 6,\n      pass_regexp: /([a-z]+[A-Z]+[0-9]+|[a-z]+[0-9]+[A-Z]+|[A-Z]+[a-z]+[0-9]+|[A-Z]+[0-9]+[a-z]+|[0-9]+[a-z]+[A-Z]+|[0-9]+[A-Z]+[a-z]+)/\n    };\n  },\n  props: ['input_type', 'input_auth'],\n  methods: {\n    ShowPass() {\n      this.$refs.input.focus();\n      if (this.path === require(\"@/img/InputPass/eye_locked.png\")) {\n        this.path = require(\"@/img/InputPass/eye.png\");\n        this.type = \"text\";\n      } else {\n        this.path = require(\"@/img/InputPass/eye_locked.png\");\n        this.type = \"password\";\n      }\n    },\n    validate() {\n      if (this.input_auth === 'reg') {\n        if (this.input_type === 'password') {\n          const passValid = () => {\n            return this.pass_regexp.test(this.input_value);\n          };\n          if (this.input_value.length < this.min_pass_length) {\n            this.error = true;\n            this.error_message = `Пароль должен быть не менее ${this.min_pass_length} символов`;\n            return false;\n          } else if (!passValid()) {\n            this.error = true;\n            this.error_message = 'Пароль должен содержать цифры и буквы(заглавные и строчные)';\n            return false;\n          } else {\n            this.error = false;\n          }\n        } else if (this.input_type === 'password-double') {\n          const password_input = document.querySelector('[data-name=\"password\"] input');\n          if (this.input_value !== password_input.value) {\n            this.error = true;\n            this.error_message = 'Пароли не совпадают';\n            return false;\n          } else {\n            this.error = false;\n          }\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","path","require","type","input_value","error","error_message","min_pass_length","pass_regexp","props","methods","ShowPass","$refs","input","focus","validate","input_auth","input_type","passValid","test","length","password_input","document","querySelector","value"],"sources":["C:\\Users\\Family\\Desktop\\python_projects\\platform\\client\\src\\components\\UI\\FormInputPass.vue"],"sourcesContent":["<template>\r\n    <div\r\n        :class=\"{ '--error' : error }\"\r\n    >\r\n        <p>\r\n            <slot></slot>\r\n        </p>\r\n        <span>\r\n            <input \r\n                ref=\"input\" \r\n                :type=\"type\"\r\n                @input=\"validate()\"\r\n                v-model.trim=\"input_value\"\r\n            >\r\n            <div class=\"eye\">\r\n                <img @click=\"ShowPass()\" :src=\"path\" alt=\"eye\">\r\n            </div>\r\n        </span>\r\n        <p v-if=\"error\" class=\"error-message\">\r\n            {{ error_message }}\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'form-input-pass',\r\n    data() {\r\n        return {\r\n            path: require(\"@/img/InputPass/eye_locked.png\"),\r\n            type: \"password\",\r\n            input_value: '',\r\n            error: false,\r\n            error_message: '',\r\n            min_pass_length: 6,\r\n            pass_regexp: /([a-z]+[A-Z]+[0-9]+|[a-z]+[0-9]+[A-Z]+|[A-Z]+[a-z]+[0-9]+|[A-Z]+[0-9]+[a-z]+|[0-9]+[a-z]+[A-Z]+|[0-9]+[A-Z]+[a-z]+)/\r\n        }\r\n    },\r\n    props: [\r\n        'input_type',\r\n        'input_auth'\r\n    ],\r\n    methods: {\r\n        ShowPass() {\r\n            this.$refs.input.focus();\r\n            if (this.path === require(\"@/img/InputPass/eye_locked.png\")) {\r\n                this.path = require(\"@/img/InputPass/eye.png\");\r\n                this.type = \"text\";\r\n            } else {\r\n                this.path = require(\"@/img/InputPass/eye_locked.png\");\r\n                this.type = \"password\";\r\n            }\r\n        },\r\n        validate() {\r\n            if (this.input_auth === 'reg') {\r\n                if (this.input_type === 'password') {\r\n                    const passValid = () => {\r\n                        return this.pass_regexp.test(this.input_value);\r\n                    }\r\n                    if (this.input_value.length < this.min_pass_length) {\r\n                        this.error = true;\r\n                        this.error_message = `Пароль должен быть не менее ${this.min_pass_length} символов`;\r\n                        return false;\r\n                    } else if (!passValid()) {\r\n                        this.error = true;\r\n                        this.error_message = 'Пароль должен содержать цифры и буквы(заглавные и строчные)';\r\n                        return false;\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n                } else if (this.input_type === 'password-double') {\r\n                    const password_input = document.querySelector('[data-name=\"password\"] input');\r\n                    if (this.input_value !== password_input.value) {\r\n                        this.error = true;\r\n                        this.error_message = 'Пароли не совпадают';\r\n                        return false;\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    div {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        gap: 5px;\r\n        .--error {\r\n            p {\r\n                color: #eb2116d6;\r\n            }\r\n            input {\r\n                box-shadow: 0 0 10px #eb211693;\r\n            }\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: 18px;\r\n    }\r\n\r\n    span {\r\n        position: relative;\r\n        width: 400px;\r\n    }\r\n\r\n    input {\r\n        width: 100%;\r\n        font-size: 16px;\r\n        padding: 10px 15px;\r\n        border-radius: 5px;\r\n        border: 1px solid rgb(2, 2, 2);\r\n        outline: none;\r\n        transition: .3s;\r\n    }\r\n    input:focus {\r\n        transform: scale(1.05);\r\n        box-shadow: 0 0 10px #b188f3af;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .eye {\r\n        img {\r\n            width: 25px;\r\n            position: absolute;\r\n            right: 10px;\r\n            top: 5px;\r\n            bottom: 0;\r\n            margin: auto;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    .error-message {\r\n        margin-bottom: 3px;\r\n        max-width: 400px;\r\n        font-size: 14px;\r\n    }\r\n</style>"],"mappings":"AAyBA,eAAe;EACXA,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAEC,OAAO,CAAC,gCAAgC,CAAC;MAC/CC,IAAI,EAAE,UAAU;MAChBC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,KAAK;MACZC,aAAa,EAAE,EAAE;MACjBC,eAAe,EAAE,CAAC;MAClBC,WAAW,EAAE;IACjB;EACJ,CAAC;EACDC,KAAK,EAAE,CACH,YAAY,EACZ,YAAW,CACd;EACDC,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACP,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,KAAK,EAAE;MACxB,IAAI,IAAI,CAACb,IAAG,KAAMC,OAAO,CAAC,gCAAgC,CAAC,EAAE;QACzD,IAAI,CAACD,IAAG,GAAIC,OAAO,CAAC,yBAAyB,CAAC;QAC9C,IAAI,CAACC,IAAG,GAAI,MAAM;MACtB,OAAO;QACH,IAAI,CAACF,IAAG,GAAIC,OAAO,CAAC,gCAAgC,CAAC;QACrD,IAAI,CAACC,IAAG,GAAI,UAAU;MAC1B;IACJ,CAAC;IACDY,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAACC,UAAS,KAAM,KAAK,EAAE;QAC3B,IAAI,IAAI,CAACC,UAAS,KAAM,UAAU,EAAE;UAChC,MAAMC,SAAQ,GAAIA,CAAA,KAAM;YACpB,OAAO,IAAI,CAACV,WAAW,CAACW,IAAI,CAAC,IAAI,CAACf,WAAW,CAAC;UAClD;UACA,IAAI,IAAI,CAACA,WAAW,CAACgB,MAAK,GAAI,IAAI,CAACb,eAAe,EAAE;YAChD,IAAI,CAACF,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAK,+BAA8B,IAAI,CAACC,eAAe,WAAW;YACnF,OAAO,KAAK;UAChB,OAAO,IAAI,CAACW,SAAS,EAAE,EAAE;YACrB,IAAI,CAACb,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAI,6DAA6D;YAClF,OAAO,KAAK;UAChB,OAAO;YACH,IAAI,CAACD,KAAI,GAAI,KAAK;UACtB;QACJ,OAAO,IAAI,IAAI,CAACY,UAAS,KAAM,iBAAiB,EAAE;UAC9C,MAAMI,cAAa,GAAIC,QAAQ,CAACC,aAAa,CAAC,8BAA8B,CAAC;UAC7E,IAAI,IAAI,CAACnB,WAAU,KAAMiB,cAAc,CAACG,KAAK,EAAE;YAC3C,IAAI,CAACnB,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAI,qBAAqB;YAC1C,OAAO,KAAK;UAChB,OAAO;YACH,IAAI,CAACD,KAAI,GAAI,KAAK;UACtB;QACJ;MACJ;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}