{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, vModelDynamic as _vModelDynamic, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1e87ec4c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"type\"];\nconst _hoisted_2 = {\n  class: \"eye\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({\n      '--error': $data.error\n    })\n  }, [_createElementVNode(\"p\", null, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)]), _createElementVNode(\"span\", null, [_withDirectives(_createElementVNode(\"input\", {\n    ref: \"input\",\n    type: $data.type,\n    onInput: _cache[0] || (_cache[0] = $event => $options.validate()),\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.input_value = $event)\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1), [[_vModelDynamic, $data.input_value, void 0, {\n    trim: true\n  }]]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.ShowPass()),\n    src: $data.path,\n    alt: \"eye\"\n  }, null, 8 /* PROPS */, _hoisted_3)])]), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.error_message), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$data","error","_createElementVNode","_renderSlot","_ctx","$slots","undefined","ref","type","onInput","_cache","$event","$options","validate","input_value","_hoisted_2","onClick","ShowPass","src","path","alt","_hoisted_4","_toDisplayString","error_message"],"sources":["C:\\Users\\Family\\Desktop\\python_projects\\platform\\client\\src\\components\\UI\\FormInputPass.vue"],"sourcesContent":["<template>\r\n    <div\r\n        :class=\"{ '--error' : error }\"\r\n    >\r\n        <p>\r\n            <slot></slot>\r\n        </p>\r\n        <span>\r\n            <input \r\n                ref=\"input\" \r\n                :type=\"type\"\r\n                @input=\"validate()\"\r\n                v-model.trim=\"input_value\"\r\n            >\r\n            <div class=\"eye\">\r\n                <img @click=\"ShowPass()\" :src=\"path\" alt=\"eye\">\r\n            </div>\r\n        </span>\r\n        <p v-if=\"error\" class=\"error-message\">\r\n            {{ error_message }}\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'form-input-pass',\r\n    data() {\r\n        return {\r\n            path: require(\"@/img/InputPass/eye_locked.png\"),\r\n            type: \"password\",\r\n            input_value: '',\r\n            error: false,\r\n            error_message: '',\r\n            min_pass_length: 6,\r\n            pass_regexp: /([a-z]+[A-Z]+[0-9]+|[a-z]+[0-9]+[A-Z]+|[A-Z]+[a-z]+[0-9]+|[A-Z]+[0-9]+[a-z]+|[0-9]+[a-z]+[A-Z]+|[0-9]+[A-Z]+[a-z]+)/\r\n        }\r\n    },\r\n    props: [\r\n        'input_type',\r\n        'input_auth'\r\n    ],\r\n    methods: {\r\n        ShowPass() {\r\n            this.$refs.input.focus();\r\n            if (this.path === require(\"@/img/InputPass/eye_locked.png\")) {\r\n                this.path = require(\"@/img/InputPass/eye.png\");\r\n                this.type = \"text\";\r\n            } else {\r\n                this.path = require(\"@/img/InputPass/eye_locked.png\");\r\n                this.type = \"password\";\r\n            }\r\n        },\r\n        validate() {\r\n            if (this.input_auth === 'reg') {\r\n                if (this.input_type === 'password') {\r\n                    const passValid = () => {\r\n                        return this.pass_regexp.test(this.input_value);\r\n                    }\r\n                    if (this.input_value.length < this.min_pass_length) {\r\n                        this.error = true;\r\n                        this.error_message = `Пароль должен быть не менее ${this.min_pass_length} символов`;\r\n                        return false;\r\n                    } else if (!passValid()) {\r\n                        this.error = true;\r\n                        this.error_message = 'Пароль должен содержать цифры и буквы(заглавные и строчные)';\r\n                        return false;\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n                } else if (this.input_type === 'password-double') {\r\n                    const password_input = document.querySelector('[data-name=\"password\"] input');\r\n                    if (this.input_value !== password_input.value) {\r\n                        this.error = true;\r\n                        this.error_message = 'Пароли не совпадают';\r\n                        return false;\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    div {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        gap: 5px;\r\n        .--error {\r\n            p {\r\n                color: #eb2116d6;\r\n            }\r\n            input {\r\n                box-shadow: 0 0 10px #eb211693;\r\n            }\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: 18px;\r\n    }\r\n\r\n    span {\r\n        position: relative;\r\n        width: 400px;\r\n    }\r\n\r\n    input {\r\n        width: 100%;\r\n        font-size: 16px;\r\n        padding: 10px 15px;\r\n        border-radius: 5px;\r\n        border: 1px solid rgb(2, 2, 2);\r\n        outline: none;\r\n        transition: .3s;\r\n    }\r\n    input:focus {\r\n        transform: scale(1.05);\r\n        box-shadow: 0 0 10px #b188f3af;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .eye {\r\n        img {\r\n            width: 25px;\r\n            position: absolute;\r\n            right: 10px;\r\n            top: 5px;\r\n            bottom: 0;\r\n            margin: auto;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    .error-message {\r\n        margin-bottom: 3px;\r\n        max-width: 400px;\r\n        font-size: 14px;\r\n    }\r\n</style>"],"mappings":";;;;EAciBA,KAAK,EAAC;AAAK;;;;EAIJA,KAAK,EAAC;;;uBAjB1BC,mBAAA,CAoBM;IAnBDD,KAAK,EAAAE,eAAA;MAAA,WAAgBC,KAAA,CAAAC;IAAK;MAE3BC,mBAAA,CAEI,YADAC,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q,GAEjBJ,mBAAA,CAUO,e,gBATHA,mBAAA,CAKC;IAJGK,GAAG,EAAC,OAAO;IACVC,IAAI,EAAER,KAAA,CAAAQ,IAAI;IACVC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ;+DACFb,KAAA,CAAAc,WAAW,GAAAH,MAAA;0EAAXX,KAAA,CAAAc,WAAW,E;UAAzB;EAA0B,E,IAE9BZ,mBAAA,CAEM,OAFNa,UAEM,GADFb,mBAAA,CAA+C;IAAzCc,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAK,QAAQ;IAAKC,GAAG,EAAElB,KAAA,CAAAmB,IAAI;IAAEC,GAAG,EAAC;2CAGxCpB,KAAA,CAAAC,KAAK,I,cAAdH,mBAAA,CAEI,KAFJuB,UAEI,EAAAC,gBAAA,CADGtB,KAAA,CAAAuB,aAAa,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}