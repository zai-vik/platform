{"ast":null,"code":"export default {\n  name: 'form-input',\n  props: ['input_type', 'input_auth'],\n  data() {\n    return {\n      input_value: '',\n      error: false,\n      error_message: '',\n      // опции для логина\n      login_error_symbols: '-@$&!=+',\n      min_login_length: 6,\n      max_login_length: 20,\n      rus_alphabet: 'АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя',\n      // опции для email\n      email_regexp: /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu\n    };\n  },\n  methods: {\n    // Валидация\n    validate() {\n      if (this.input_auth === 'reg') {\n        // Если поле логин\n        if (this.input_type === 'login') {\n          // По длине логина\n          if (this.input_value.length < this.min_login_length) {\n            // мин длина\n            this.error = true;\n            this.error_message = `Никнейм должен быть не меньше ${this.min_login_length} символов`;\n            return false;\n          } else if (this.input_value.length > this.max_login_length) {\n            // макс длина\n            this.error = true;\n            this.error_message = `Никнейм должен быть не больше ${this.max_login_length} символов`;\n            return false;\n          } else if (this.loginErrorSymbols()) {\n            // По содержанию запрещённых символов\n            let error_symbols = this.login_error_symbols.split('');\n            for (let i = 0; i < error_symbols.length; i++) {\n              error_symbols[i] = `\"${error_symbols[i]}\"`;\n            }\n            error_symbols = error_symbols.join(', ');\n            this.error = true;\n            this.error_message = `Никнейм не может содержать ${error_symbols}`;\n            return false;\n          } else if (this.errorRusAlphabet()) {\n            // По содержанию кириллицы\n            this.error = true;\n            this.error_message = 'Никнейм не может содержать кириллицу';\n            return false;\n          } else {\n            this.error = false;\n          }\n        } else if (this.input_type === 'email') {\n          // Если поле email\n          const emailValid = () => {\n            return this.email_regexp.test(this.input_value);\n          };\n          if (!emailValid()) {\n            this.error = true;\n            this.error_message = 'Вы ввели некорректный email';\n          } else {\n            this.error = false;\n          }\n        }\n      }\n    },\n    loginErrorSymbols() {\n      let include;\n      let symbols = this.login_error_symbols.split('');\n      symbols.forEach(symbol => {\n        if (this.input_value.includes(symbol)) {\n          include = true;\n        }\n      });\n      return include;\n    },\n    errorRusAlphabet() {\n      let include;\n      let alphabet = this.rus_alphabet.split('');\n      alphabet.forEach(letter => {\n        if (this.input_value.includes(letter)) {\n          include = true;\n        }\n      });\n      return include;\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","input_value","error","error_message","login_error_symbols","min_login_length","max_login_length","rus_alphabet","email_regexp","methods","validate","input_auth","input_type","length","loginErrorSymbols","error_symbols","split","i","join","errorRusAlphabet","emailValid","test","include","symbols","forEach","symbol","includes","alphabet","letter"],"sources":["C:\\Users\\Family\\Desktop\\python_projects\\platform\\client\\src\\components\\UI\\FormInput.vue"],"sourcesContent":["<template>\r\n    <div\r\n        :class=\"{ '--error' : error }\"\r\n    >\r\n        <p>\r\n            <slot></slot>\r\n        </p>\r\n        <input \r\n            type=\"text\"\r\n            @input=\"validate()\"\r\n            v-model.trim=\"input_value\"\r\n        >\r\n        <p v-if=\"error\" class=\"error-message\">\r\n            {{ error_message }}\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'form-input',\r\n    props: [\r\n        'input_type',\r\n        'input_auth'\r\n    ],\r\n    data() {\r\n        return {\r\n            input_value: '',\r\n            error: false,\r\n            error_message: '',\r\n\r\n            // опции для логина\r\n            login_error_symbols: '-@$&!=+',\r\n            min_login_length: 6,\r\n            max_login_length: 20,\r\n            rus_alphabet: 'АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя',\r\n\r\n            // опции для email\r\n            email_regexp: /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu\r\n        }\r\n    },  \r\n    methods: {\r\n        // Валидация\r\n        validate() {\r\n            if (this.input_auth === 'reg') {\r\n                // Если поле логин\r\n                if (this.input_type === 'login') {\r\n                    // По длине логина\r\n                    if (this.input_value.length < this.min_login_length) { // мин длина\r\n                        this.error = true;\r\n                        this.error_message = `Никнейм должен быть не меньше ${this.min_login_length} символов`;\r\n                        return false;\r\n                    } else if (this.input_value.length > this.max_login_length) { // макс длина\r\n                        this.error = true;\r\n                        this.error_message = `Никнейм должен быть не больше ${this.max_login_length} символов`;\r\n                        return false;\r\n\r\n                    } else if (this.loginErrorSymbols()) { // По содержанию запрещённых символов\r\n                        let error_symbols = this.login_error_symbols.split('');\r\n                        for (let i = 0; i < error_symbols.length; i++) {\r\n                            error_symbols[i] = `\"${error_symbols[i]}\"`;\r\n                        }\r\n                        error_symbols = error_symbols.join(', ');\r\n                        this.error = true;\r\n                        this.error_message = `Никнейм не может содержать ${error_symbols}`;\r\n                        return false;\r\n\r\n                    } else if (this.errorRusAlphabet()) { // По содержанию кириллицы\r\n                        this.error = true;\r\n                        this.error_message = 'Никнейм не может содержать кириллицу';\r\n                        return false;\r\n\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n\r\n                } else if (this.input_type === 'email') { // Если поле email\r\n                    const emailValid = () => {\r\n                        return this.email_regexp.test(this.input_value);\r\n                    }\r\n                    if (!emailValid()) {\r\n                        this.error = true;\r\n                        this.error_message = 'Вы ввели некорректный email';\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        loginErrorSymbols() {\r\n            let include;\r\n            let symbols = this.login_error_symbols.split('');\r\n            symbols.forEach(symbol => {\r\n                if (this.input_value.includes(symbol)) {\r\n                    include = true;\r\n                }\r\n            })\r\n            return include;\r\n        },\r\n        errorRusAlphabet() {\r\n            let include;\r\n            let alphabet = this.rus_alphabet.split('');\r\n            alphabet.forEach(letter => {\r\n                if (this.input_value.includes(letter)) {\r\n                    include = true;\r\n                }\r\n            })\r\n            return include;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    div {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        gap: 5px;\r\n        .--error {\r\n            p {\r\n                color: #eb2116d6;\r\n            }\r\n            input {\r\n                box-shadow: 0 0 10px #eb211693;\r\n            }\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: 18px;\r\n    }\r\n\r\n    input {\r\n        width: 400px;\r\n        font-size: 16px;\r\n        padding: 10px 15px;\r\n        border-radius: 5px;\r\n        border: 1px solid rgb(2, 2, 2);\r\n        outline: none;\r\n        transition: all .3s;\r\n    }\r\n    input:focus {\r\n        transform: scale(1.05);\r\n        box-shadow: 0 0 10px #b188f3af;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .error-message {\r\n        margin-bottom: 3px;\r\n        max-width: 400px;\r\n        font-size: 14px;\r\n    }\r\n</style>"],"mappings":"AAmBA,eAAe;EACXA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CACH,YAAY,EACZ,YAAW,CACd;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,KAAK;MACZC,aAAa,EAAE,EAAE;MAEjB;MACAC,mBAAmB,EAAE,SAAS;MAC9BC,gBAAgB,EAAE,CAAC;MACnBC,gBAAgB,EAAE,EAAE;MACpBC,YAAY,EAAE,oEAAoE;MAElF;MACAC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;IACAC,QAAQA,CAAA,EAAG;MACP,IAAI,IAAI,CAACC,UAAS,KAAM,KAAK,EAAE;QAC3B;QACA,IAAI,IAAI,CAACC,UAAS,KAAM,OAAO,EAAE;UAC7B;UACA,IAAI,IAAI,CAACX,WAAW,CAACY,MAAK,GAAI,IAAI,CAACR,gBAAgB,EAAE;YAAE;YACnD,IAAI,CAACH,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAK,iCAAgC,IAAI,CAACE,gBAAgB,WAAW;YACtF,OAAO,KAAK;UAChB,OAAO,IAAI,IAAI,CAACJ,WAAW,CAACY,MAAK,GAAI,IAAI,CAACP,gBAAgB,EAAE;YAAE;YAC1D,IAAI,CAACJ,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAK,iCAAgC,IAAI,CAACG,gBAAgB,WAAW;YACtF,OAAO,KAAK;UAEhB,OAAO,IAAI,IAAI,CAACQ,iBAAiB,EAAE,EAAE;YAAE;YACnC,IAAIC,aAAY,GAAI,IAAI,CAACX,mBAAmB,CAACY,KAAK,CAAC,EAAE,CAAC;YACtD,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIF,aAAa,CAACF,MAAM,EAAEI,CAAC,EAAE,EAAE;cAC3CF,aAAa,CAACE,CAAC,IAAK,IAAGF,aAAa,CAACE,CAAC,CAAE,GAAE;YAC9C;YACAF,aAAY,GAAIA,aAAa,CAACG,IAAI,CAAC,IAAI,CAAC;YACxC,IAAI,CAAChB,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAK,8BAA6BY,aAAc,EAAC;YAClE,OAAO,KAAK;UAEhB,OAAO,IAAI,IAAI,CAACI,gBAAgB,EAAE,EAAE;YAAE;YAClC,IAAI,CAACjB,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAI,sCAAsC;YAC3D,OAAO,KAAK;UAEhB,OAAO;YACH,IAAI,CAACD,KAAI,GAAI,KAAK;UACtB;QAEJ,OAAO,IAAI,IAAI,CAACU,UAAS,KAAM,OAAO,EAAE;UAAE;UACtC,MAAMQ,UAAS,GAAIA,CAAA,KAAM;YACrB,OAAO,IAAI,CAACZ,YAAY,CAACa,IAAI,CAAC,IAAI,CAACpB,WAAW,CAAC;UACnD;UACA,IAAI,CAACmB,UAAU,EAAE,EAAE;YACf,IAAI,CAAClB,KAAI,GAAI,IAAI;YACjB,IAAI,CAACC,aAAY,GAAI,6BAA6B;UACtD,OAAO;YACH,IAAI,CAACD,KAAI,GAAI,KAAK;UACtB;QACJ;MACJ;IACJ,CAAC;IACDY,iBAAiBA,CAAA,EAAG;MAChB,IAAIQ,OAAO;MACX,IAAIC,OAAM,GAAI,IAAI,CAACnB,mBAAmB,CAACY,KAAK,CAAC,EAAE,CAAC;MAChDO,OAAO,CAACC,OAAO,CAACC,MAAK,IAAK;QACtB,IAAI,IAAI,CAACxB,WAAW,CAACyB,QAAQ,CAACD,MAAM,CAAC,EAAE;UACnCH,OAAM,GAAI,IAAI;QAClB;MACJ,CAAC;MACD,OAAOA,OAAO;IAClB,CAAC;IACDH,gBAAgBA,CAAA,EAAG;MACf,IAAIG,OAAO;MACX,IAAIK,QAAO,GAAI,IAAI,CAACpB,YAAY,CAACS,KAAK,CAAC,EAAE,CAAC;MAC1CW,QAAQ,CAACH,OAAO,CAACI,MAAK,IAAK;QACvB,IAAI,IAAI,CAAC3B,WAAW,CAACyB,QAAQ,CAACE,MAAM,CAAC,EAAE;UACnCN,OAAM,GAAI,IAAI;QAClB;MACJ,CAAC;MACD,OAAOA,OAAO;IAClB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}