{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd6ccc0c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass({\n      '--error': $data.error\n    })\n  }, [_createElementVNode(\"p\", null, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    onInput: _cache[0] || (_cache[0] = $event => $options.validate()),\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.input_value = $event)\n  }, null, 544), [[_vModelText, $data.input_value, void 0, {\n    trim: true\n  }]]), $data.error ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($data.error_message), 1)) : _createCommentVNode(\"\", true)], 2);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$data","error","_createElementVNode","_renderSlot","_ctx","$slots","undefined","type","onInput","_cache","$event","$options","validate","input_value","_hoisted_1","_toDisplayString","error_message"],"sources":["C:\\Users\\Family\\Desktop\\python_projects\\platform\\client\\src\\components\\UI\\FormInput.vue"],"sourcesContent":["<template>\r\n    <div\r\n        :class=\"{ '--error' : error }\"\r\n    >\r\n        <p>\r\n            <slot></slot>\r\n        </p>\r\n        <input \r\n            type=\"text\"\r\n            @input=\"validate()\"\r\n            v-model.trim=\"input_value\"\r\n        >\r\n        <p v-if=\"error\" class=\"error-message\">\r\n            {{ error_message }}\r\n        </p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'form-input',\r\n    props: [\r\n        'input_type',\r\n        'input_auth'\r\n    ],\r\n    data() {\r\n        return {\r\n            input_value: '',\r\n            error: false,\r\n            error_message: '',\r\n\r\n            // опции для логина\r\n            login_error_symbols: '-@$&!=+,./|#%^*()\\\\{}[]\\'\";:<>?',\r\n            min_login_length: 6,\r\n            max_login_length: 20,\r\n            rus_alphabet: 'АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя',\r\n\r\n            // опции для email\r\n            email_regexp: /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu\r\n        }\r\n    },  \r\n    methods: {\r\n        // Валидация\r\n        validate() {\r\n            if (this.input_auth === 'reg') {\r\n                // Если поле логин\r\n                if (this.input_type === 'login') {\r\n                    // По длине логина\r\n                    if (this.input_value.length < this.min_login_length) { // мин длина\r\n                        this.error = true;\r\n                        this.error_message = `Никнейм должен быть не меньше ${this.min_login_length} символов`;\r\n                        return false;\r\n                    } else if (this.input_value.length > this.max_login_length) { // макс длина\r\n                        this.error = true;\r\n                        this.error_message = `Никнейм должен быть не больше ${this.max_login_length} символов`;\r\n                        return false;\r\n\r\n                    } else if (this.loginErrorSymbols()) { // По содержанию запрещённых символов\r\n                        this.error = true;\r\n                        this.error_message = `Никнейм содержит недопустимые символы`;\r\n                        return false;\r\n\r\n                    } else if (this.errorRusAlphabet()) { // По содержанию кириллицы\r\n                        this.error = true;\r\n                        this.error_message = 'Никнейм не может содержать кириллицу';\r\n                        return false;\r\n\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n\r\n                } else if (this.input_type === 'email') { // Если поле email\r\n                    const emailValid = () => {\r\n                        return this.email_regexp.test(this.input_value);\r\n                    }\r\n                    if (!emailValid()) {\r\n                        this.error = true;\r\n                        this.error_message = 'Вы ввели некорректный email';\r\n                    } else {\r\n                        this.error = false;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        loginErrorSymbols() {\r\n            let include;\r\n            let symbols = this.login_error_symbols.split('');\r\n            symbols.forEach(symbol => {\r\n                if (this.input_value.includes(symbol)) {\r\n                    include = true;\r\n                }\r\n            })\r\n            return include;\r\n        },\r\n        errorRusAlphabet() {\r\n            let include;\r\n            let alphabet = this.rus_alphabet.split('');\r\n            alphabet.forEach(letter => {\r\n                if (this.input_value.includes(letter)) {\r\n                    include = true;\r\n                }\r\n            })\r\n            return include;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n    div {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        gap: 5px;\r\n        .--error {\r\n            p {\r\n                color: #eb2116d6;\r\n            }\r\n            input {\r\n                box-shadow: 0 0 10px #eb211693;\r\n            }\r\n        }\r\n    }\r\n\r\n    p {\r\n        font-size: 18px;\r\n    }\r\n\r\n    input {\r\n        width: 400px;\r\n        font-size: 16px;\r\n        padding: 10px 15px;\r\n        border-radius: 5px;\r\n        border: 1px solid rgb(2, 2, 2);\r\n        outline: none;\r\n        transition: all .3s;\r\n    }\r\n    input:focus {\r\n        transform: scale(1.05);\r\n        box-shadow: 0 0 10px #b188f3af;\r\n        margin-top: 5px;\r\n    }\r\n\r\n    .error-message {\r\n        margin-bottom: 3px;\r\n        max-width: 400px;\r\n        font-size: 14px;\r\n    }\r\n</style>"],"mappings":";;;;EAYwBA,KAAK,EAAC;;;uBAX1BC,mBAAA,CAcM;IAbDD,KAAK,EAAAE,eAAA;MAAA,WAAgBC,KAAA,CAAAC;IAAK;MAE3BC,mBAAA,CAEI,YADAC,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,Q,mBAEjBJ,mBAAA,CAIC;IAHGK,IAAI,EAAC,MAAM;IACVC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,QAAQ;+DACFZ,KAAA,CAAAa,WAAW,GAAAH,MAAA;gCAAXV,KAAA,CAAAa,WAAW,E;UAAzB;EAA0B,E,IAErBb,KAAA,CAAAC,KAAK,I,cAAdH,mBAAA,CAEI,KAFJgB,UAEI,EAAAC,gBAAA,CADGf,KAAA,CAAAgB,aAAa,S"},"metadata":{},"sourceType":"module","externalDependencies":[]}